// Generated by view binder compiler. Do not edit!
package com.example.nhatnghia_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nhatnghia_app.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignInBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText ed1;

  @NonNull
  public final TextInputEditText ed2;

  @NonNull
  public final ImageView imgsigin;

  @NonNull
  public final LinearLayout llsingin;

  @NonNull
  public final Button loginBtn1;

  @NonNull
  public final TextView tv1;

  @NonNull
  public final TextView tv2;

  private ActivitySignInBinding(@NonNull LinearLayout rootView, @NonNull EditText ed1,
      @NonNull TextInputEditText ed2, @NonNull ImageView imgsigin, @NonNull LinearLayout llsingin,
      @NonNull Button loginBtn1, @NonNull TextView tv1, @NonNull TextView tv2) {
    this.rootView = rootView;
    this.ed1 = ed1;
    this.ed2 = ed2;
    this.imgsigin = imgsigin;
    this.llsingin = llsingin;
    this.loginBtn1 = loginBtn1;
    this.tv1 = tv1;
    this.tv2 = tv2;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ed1;
      EditText ed1 = ViewBindings.findChildViewById(rootView, id);
      if (ed1 == null) {
        break missingId;
      }

      id = R.id.ed2;
      TextInputEditText ed2 = ViewBindings.findChildViewById(rootView, id);
      if (ed2 == null) {
        break missingId;
      }

      id = R.id.imgsigin;
      ImageView imgsigin = ViewBindings.findChildViewById(rootView, id);
      if (imgsigin == null) {
        break missingId;
      }

      id = R.id.llsingin;
      LinearLayout llsingin = ViewBindings.findChildViewById(rootView, id);
      if (llsingin == null) {
        break missingId;
      }

      id = R.id.login_btn1;
      Button loginBtn1 = ViewBindings.findChildViewById(rootView, id);
      if (loginBtn1 == null) {
        break missingId;
      }

      id = R.id.tv1;
      TextView tv1 = ViewBindings.findChildViewById(rootView, id);
      if (tv1 == null) {
        break missingId;
      }

      id = R.id.tv2;
      TextView tv2 = ViewBindings.findChildViewById(rootView, id);
      if (tv2 == null) {
        break missingId;
      }

      return new ActivitySignInBinding((LinearLayout) rootView, ed1, ed2, imgsigin, llsingin,
          loginBtn1, tv1, tv2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
