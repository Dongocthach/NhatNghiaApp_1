// Generated by view binder compiler. Do not edit!
package com.example.nhatnghia_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.nhatnghia_app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFmDoiMatKhauBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button canclepasswordBtn;

  @NonNull
  public final Button changepasswordBtn;

  @NonNull
  public final EditText changepasswordEdit1;

  @NonNull
  public final EditText changepasswordEdit2;

  private FragmentFmDoiMatKhauBinding(@NonNull FrameLayout rootView,
      @NonNull Button canclepasswordBtn, @NonNull Button changepasswordBtn,
      @NonNull EditText changepasswordEdit1, @NonNull EditText changepasswordEdit2) {
    this.rootView = rootView;
    this.canclepasswordBtn = canclepasswordBtn;
    this.changepasswordBtn = changepasswordBtn;
    this.changepasswordEdit1 = changepasswordEdit1;
    this.changepasswordEdit2 = changepasswordEdit2;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFmDoiMatKhauBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFmDoiMatKhauBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_fm__doi_mat_khau, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFmDoiMatKhauBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.canclepassword_btn;
      Button canclepasswordBtn = ViewBindings.findChildViewById(rootView, id);
      if (canclepasswordBtn == null) {
        break missingId;
      }

      id = R.id.changepassword_btn;
      Button changepasswordBtn = ViewBindings.findChildViewById(rootView, id);
      if (changepasswordBtn == null) {
        break missingId;
      }

      id = R.id.changepassword_edit_1;
      EditText changepasswordEdit1 = ViewBindings.findChildViewById(rootView, id);
      if (changepasswordEdit1 == null) {
        break missingId;
      }

      id = R.id.changepassword_edit_2;
      EditText changepasswordEdit2 = ViewBindings.findChildViewById(rootView, id);
      if (changepasswordEdit2 == null) {
        break missingId;
      }

      return new FragmentFmDoiMatKhauBinding((FrameLayout) rootView, canclepasswordBtn,
          changepasswordBtn, changepasswordEdit1, changepasswordEdit2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
